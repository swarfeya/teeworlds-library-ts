// packet = "\x42\x00\x09\x06\x00\x3f\x79\x6f\x73\x68\x69\x3a\x20\x73\x6f\x73" +
// "\x69\x73\x6b\x61\x3a\x20\x73\x74\x6f\x70\x20\x75\x73\x65\x20\x6b" +
// "\x72\x78\x00\x42\x06\x0a\x06\x00\x40\x27\x74\x65\x73\x74\x27\x20" +
// "\x65\x6e\x74\x65\x72\x65\x64\x20\x61\x6e\x64\x20\x6a\x6f\x69\x6e" +
// "\x65\x64\x20\x74\x68\x65\x20\x67\x61\x6d\x65\x00\x43\x08\x0b\x06" +
// "\x00\x40\x46\x2d\x44\x44\x72\x61\x63\x65\x20\x4d\x6f\x64\x2e\x20" +
// "\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x37\x2f\x30\x2e\x36" +
// "\x2c\x20\x31\x32\x2e\x38\x2e\x31\x2c\x20\x62\x79\x20\x66\x6f\x6b" +
// "\x6b\x6f\x6e\x61\x75\x74\x00\x48\x0d\x0c\x04\x57\x65\x61\x70\x6f" +
// "\x6e\x3a\x20\x47\x75\x6e\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
// "\x20\x20\x20\x20\x20\x20\x00\x40\x04\x0d\x06\x00\x40\x00\x49\x0b" +
// "\x0e\x0c\xa8\x0f\x88\x03\x32\xa8\x14\xb0\x12\xb4\x07\x96\x02\x9f" +
// "\x01\xb0\xd1\x04\x80\x7d\xac\x04\x9c\x17\x32\x98\xdb\x06\x80\xb5" +
// "\x18\x8c\x02\x00\xa0\x8b\x11\x88\x03\x00\x90\x8d\x06\x90\x01\x14" +
// "\xbc\x0a\xa0\x9a\x0c\x88\x03\x80\xe2\x09\x98\xea\x01\xa0\x9a\x0c" +
// "\x00\x00\xa4\x01\xa4\x01\x80\xf1\x04\xa8\x0f\x98\x09\xa4\x01\xbd" +
// "\x01\x94\xc3\x01\x94\xc3\x01\x90\x8d\x06\x90\x8d\x06\x80\xe2\x09" +
// "\x80\xe2\x09\x80\xe2\x09\x94\xc3\x01\x94\xc3\x01\x90\x8d\x06\x90" +
// "\x8d\x06\x94\xc3\x01\x90\x8d\x06\x90\x9c\x01\xa0\xa9\x07\x00\xb8" +
// "\x93\x09\xb4\x07\xbd\x01\xb8\xc8\x21\xbd\x01\xa0\xed\x1a\x88\x03" +
// "\xa0\x84\x3d\x80\xb5\x18\x80\xda\xc4\x09\xac\x04\x27\x08\x0f\x9c" +
// "\xa2\x9f\x04\x9d\xa2\x9f\x04\xe5\xde\xa3\x9c\x01\xa8\x09\x00\x18" +
// "\x00\x00\xbf\xff\x03\x04\x9b\x95\xf2\xec\x0e\xf7\x96\xa6\x61\xf4" +
// "\xfe\xc0\xa2\x0a\xe3\xee\x97\xbe\x0d\x00\xbe\xff\x03\x04\xd5\xd6" +
// "\x90\xcc\x0d\xd5\xbc\xb6\xd8\x04\xcf\xd4\x83\xe7\x0a\x85\xa5\xcd" +
// "\xe8\x06\x00\xbd\xff\x03\x04\x8d\xce\xd4\xac\x04\xab\xf8\x81\xb8" +
// "\x02\xea\xb6\xa1\x98\x0c\xee\x87\xca\x95\x0e\x00\xbc\xff\x03\x04" +
// "\xb4\xf1\x80\xb8\x09\xdf\x8c\x9e\xdb\x03\xeb\xa2\x9a\xed\x08\xf5" +
// "\x8d\x98\xfd\x05\x09\x00\x9c\xa2\x9f\x04\xb0\xe8\x01\x94\x27\x00" +
// "\x80\x06\xd1\x06\x00\x00\x40\x00\x00\xb0\xe8\x01\x92\x27\x00\x00" +
// "\x00\x0a\x0a\x00\x01\x05\x00\xbf\xff\x03\x00\x05\x80\x80\x06\x00" +
// "\x02\x00\x00\x03\x34\xb0\xea\x01\x90\x2a\xb0\xea\x01\x90\x2a\x9c" +
// "\xa2\x9f\x04\x03\x33\xb0\xe9\x01\x90\x2a\xb0\xe9\x01\x90\x2a\x9c" +
// "\xa2\x9f\x04\x03\x22\xb0\xea\x01\x90\x28\xb0\xea\x01\x90\x28\x9c" +
// "\xa2\x9f\x04\x03\x21\xb0\xe9\x01\x90\x28\xb0\xe9\x01\x90\x28\x9c" +
// "\xa2\x9f\x04\x03\x39\x90\xe6\x01\xb0\x2c\x90\xe6\x01\xb4\x2b\x9a" +
// "\xa2\x9f\x04\x03\x38\x90\xe6\x01\xb0\x2c\xa7\xe7\x01\x88\x2c\x99" +
// "\xa2\x9f\x04\x03\x37\x90\xe6\x01\xb0\x2c\x91\xe5\x01\x8c\x2c\x98" +
// "\xa2\x9f\x04\x06\x00\x02\x00\x00\x00\x00\x00\x00\x01\xbe\xff\x03" +
// "\x00\x03\xb2\xb0\x9f\xec\x09\x06\x0d\x07\x00\x00\x00\x40\x40\x0a" +
// "\x00\x01\x00\x00\x00\x00\x0b\x00\xcb\xb0\xd0\xb1\x01\xff\xfd\xfb" +
// "\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xf7" +
// "\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xd4\xc4\xb0\xf1" +
// "\x01\xff\xfd\xfb\x67\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff" +
// "\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x8b\xfd\xa7\x07\xb6\xfc" +
// "\xf7\x0a\xbd\xff\x03\x00\x02\x01\x00\x0b\x3f\xff\xfd\xfb\xf7\x0b" +
// "\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff" +
// "\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x00\xde" +
// "\xe4\xd0\xb1\x03\xff\xad\x98\xa1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd" +
// "\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x00\x00\x00" +
// "\x0b\x3e\xdf\xed\xd0\xd1\x05\xd8\xf8\x98\x91\x07\xff\xfd\xfb\xf7" +
// "\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f" +
// "\xff\xff\xfb\xf7\x0f\x00\xde\xe4\xd0\xb1\x03\xff\xad\x98\xa1\x01" +
// "\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff" +
// "\xff\xfb\xf7\x0f\x01\xab\xfd\x07\xab\xfd\x07\x0a\x3e\x00\x3e\x01" +
// "\x40\x00\x0b\x3d\xda\xa8\x98\xd1\x07\xde\xcc\xc8\xf3\x0b\xff\xfd" +
// "\xfb\x87\x03\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb" +
// "\xf7\x0f\xff\xff\xfb\xf7\x0f\x00\xde\xe4\xd0\xb1\x03\xff\xad\x98" +
// "\xa1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7" +
// "\x0f\xff\xff\xfb\xf7\x0f\x01\xab\xfd\xdf\x09\xab\xfd\xdf\x09\x0a" +
// "\x3d\x00\x3d\x01\x40\x00\x09\xa6\x50\x39"


// function Unpack(pData, Split=4)
// {
// 	console.log(pData[0], pData[0] >> 6, (pData[0] >> 6) & 3)
// 	m_Flags = (pData[0] >> 6) & 3;
// 	m_Size = ((pData[0] & 0x3f) << Split) | (pData[1] & ((1 << Split) - 1));
// 	m_Sequence = -1;
// 	if(m_Flags & 1)
// 	{
// 		m_Sequence = ((pData[1] & (~((1 << Split) - 1))) << 2) | pData[2];
// 		return m_Sequence
// 		// return pData + 3;
// 	}
// 	return [m_Sequence, m_Flags]
// 	// return pData + 2;
// }
// // var buff = Buffer.from(a)

// // var a = Buffer.from("\x06\x00\x3f\x79\x6f\x73\x68\x69\x3a\x20\x73\x6f\x73" +
// // "\x69\x73\x6b\x61\x3a\x20\x73\x74\x6f\x70\x20\x75\x73\x65\x20\x6b" +
// // "\x72\x78\x00")
// var packet = Buffer.from("\x00\x04\x06\x42\x06\x09\x06\x00\x40\x27\x74\x65\x73\x74\x27\x20\x65\x6e\x74" + "\x65\x72\x65\x64\x20\x61\x6e\x64\x20\x6a\x6f\x69\x6e\x65\x64\x20" + "\x74\x68\x65\x20\x67\x61\x6d\x65\x00\x43\x08\x0a\x06\x00\x40\x46" + "\x2d\x44\x44\x72\x61\x63\x65\x20\x4d\x6f\x64\x2e\x20\x56\x65\x72" + "\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x37\x2f\x30\x2e\x36\x2c\x20\x31" + "\x32\x2e\x38\x2e\x31\x2c\x20\x62\x79\x20\x66\x6f\x6b\x6b\x6f\x6e" + "\x61\x75\x74\x00\x48\x0d\x0b\x04\x57\x65\x61\x70\x6f\x6e\x3a\x20" + "\x47\x75\x6e\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x00\x40\x04\x0c\x06\x00\x40\x00\x49\x0b\x0d\x0c\xa8" + "\x0f\x88\x03\x32\xa8\x14\xb0\x12\xb4\x07\x96\x02\x9f\x01\xb0\xd1" + "\x04\x80\x7d\xac\x04\x9c\x17\x32\x98\xdb\x06\x80\xb5\x18\x8c\x02" + "\x00\xa0\x8b\x11\x88\x03\x00\x90\x8d\x06\x90\x01\x14\xbc\x0a\xa0" + "\x9a\x0c\x88\x03\x80\xe2\x09\x98\xea\x01\xa0\x9a\x0c\x00\x00\xa4" + "\x01\xa4\x01\x80\xf1\x04\xa8\x0f\x98\x09\xa4\x01\xbd\x01\x94\xc3" + "\x01\x94\xc3\x01\x90\x8d\x06\x90\x8d\x06\x80\xe2\x09\x80\xe2\x09" + "\x80\xe2\x09\x94\xc3\x01\x94\xc3\x01\x90\x8d\x06\x90\x8d\x06\x94" + "\xc3\x01\x90\x8d\x06\x90\x9c\x01\xa0\xa9\x07\x00\xb8\x93\x09\xb4" + "\x07\xbd\x01\xb8\xc8\x21\xbd\x01\xa0\xed\x1a\x88\x03\xa0\x84\x3d" + "\x80\xb5\x18\x80\xda\xc4\x09\xac\x04\x39\x06\x0b\xac\xd1\x8b\x05" + "\xad\xd1\x8b\x05\x03\x00\xb9\xae\xb0\xcc\x07\x84\x0e\x00\x96\x01" + "\x00\x00\xbf\xff\x03\x04\x9b\x95\xf2\xec\x0e\xf7\x96\xa6\x61\xf4" + "\xfe\xc0\xa2\x0a\xe3\xee\x97\xbe\x0d\x00\xbe\xff\x03\x04\xd5\xd6" + "\x90\xcc\x0d\xd5\xbc\xb6\xd8\x04\xcf\xd4\x83\xe7\x0a\x85\xa5\xcd" + "\xe8\x06\x00\xbd\xff\x03\x04\x8d\xce\xd4\xac\x04\xab\xf8\x81\xb8" + "\x02\xea\xb6\xa1\x98\x0c\xee\x87\xca\x95\x0e\x00\xbc\xff\x03\x04" + "\xb4\xf1\x80\xb8\x09\xdf\x8c\x9e\xdb\x03\xeb\xa2\x9a\xed\x08\xf5" + "\x8d\x98\xfd\x05\x09\x00\xac\xd1\x8b\x05\xb0\xe8\x01\x98\x27\x00" + "\x80\x0a\xd1\x06\x00\x00\x40\x00\x00\xb0\xe8\x01\x96\x27\x00\x00" + "\x00\x0a\x0a\x00\x01\x05\x00\xbf\xff\x03\x00\x05\x80\x80\x06\x00" + "\x02\x00\x00\x09\x03\xac\xd1\x8b\x05\xae\xe2\x01\xb1\x31\x00\x00" + "\x7f\x00\x00\x40\x00\x00\xae\xe2\x01\xb1\x31\x00\x00\x00\x00\x00" + "\x00\x01\x00\x00\xbf\xff\x03\x03\x05\x80\x80\x06\x00\x02\x00\x08" + "\x03\x34\xb0\xea\x01\x90\x2a\xb0\xea\x01\x90\x2a\xac\xd1\x8b\x05" + "\x03\x33\xb0\xe9\x01\x90\x2a\xb0\xe9\x01\x90\x2a\xac\xd1\x8b\x05" + "\x03\x22\xb0\xea\x01\x90\x28\xb0\xea\x01\x90\x28\xac\xd1\x8b\x05" + "\x03\x21\xb0\xe9\x01\x90\x28\xb0\xe9\x01\x90\x28\xac\xd1\x8b\x05" + "\x03\x39\x90\xe6\x01\xb0\x2c\xae\xe6\x01\xa3\x2d\xaa\xd1\x8b\x05" + "\x03\x38\x90\xe6\x01\xb0\x2c\x90\xe7\x01\xa8\x2b\xa9\xd1\x8b\x05" + "\x03\x37\x90\xe6\x01\xb0\x2c\x88\xe5\x01\xb0\x2c\xa8\xd1\x8b\x05" + "\x06\x00\x02\x00\x00\x00\x00\x00\x00\x01\xbe\xff\x03\x00\x03\xb2" + "\xb0\x9f\xec\x09\x06\x0d\x07\x00\x00\x00\x41\x0e\x0a\x01\x00\x01" + "\x00\x00\x00\x0b\x01\xcf\xf8\x98\x91\x03\xff\xfd\xb3\xf0\x01\xff" + "\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xe7\x09\xff\xfd" + "\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0" + "\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb" + "\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x01\x02\x00" + "\x00\x0a\x02\x00\x02\x01\x00\x00\x0b\x02\xd3\xd8\xb8\xc1\x07\xd8" + "\xc4\xb0\xb1\x02\xff\xfd\xfb\x87\x02\xff\xff\xfb\xf7\x0f\xff\xfd" + "\xfb\xd7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8" + "\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb" + "\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd" + "\xff\x03\x02\x02\x00\x00\x0a\x03\x00\x03\x00\x00\x00\x0b\x03\xd3" + "\xcc\xb0\xd1\x04\xda\xb4\xd8\x63\xff\xfd\xa3\xc1\x03\xff\xff\xfb" + "\xf7\x0f\xff\xfd\xfb\xc7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7" + "\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1" + "\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f" + "\x01\x32\x32\xbd\xff\x03\x03\x02\x00\x00\x0a\x04\x00\x04\x00\x00" + "\x00\x0b\x04\xd9\xa8\x98\x91\x07\xff\xfd\xb3\x90\x03\xff\xfd\xfb" + "\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xb7\x09\xff\xfd\xfb\xf7" + "\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90" + "\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f" + "\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x04\x02\x00\x00\x0a" + "\x05\x00\x05\x00\x00\x00\x0b\x05\xe0\xe0\x99\xa3\x06\xff\xc1\xe9" + "\xf2\x05\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xa7" + "\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80" + "\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f" + "\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03" + "\x05\x02\x00\x00\x0a\x06\x00\x06\x00\x00\x00\x0b\x06\xcb\xb4\xf0" + "\xb1\x03\xff\xfd\xd3\xa1\x03\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7" + "\x0f\xff\xf9\xe1\xc2\x06\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f" + "\xaa\x0a\xdb\xec\xf0\xc1\x01\xff\xfd\xfb\x87\x02\xff\xfd\xfb\xf7" + "\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f" + "\x01\xbf\x83\x80\x0d\x80\xfe\x07\xbd\xff\x03\x06\x02\x01\x00\x0a" + "\x07\x00\x07\x00\x00\x00\x0b\x07\xdb\xd8\xf2\xf4\x0a\xda\xac\xe8" + "\xe0\x03\xff\xfd\xfb\xa7\x03\xff\xff\xfb\xf7\x0f\xff\xf9\xe1\xc2" + "\x06\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xaa\x0a\xdb\xec\xf0" + "\xc1\x7c\x96\x03\xd7")
// var packet = Buffer.from(
// 	"\x00\x05\x02\x40\x0e\x10\x06\x00\x1a\x6b\x72\x78\x20\x69\x73\x20\x67\x61\x79" + "\x00\x39\x06\x0b\x8a\xa4\x9f\x04\x8b\xa4\x9f\x04\x04\x00\x96\xaa" + "\xc7\xe2\x0e\x84\x0e\x00\xb2\x01\x00\x00\xbf\xff\x03\x04\x9b\x95" + "\xf2\xec\x0e\xf7\x96\xa6\x61\xf4\xfe\xc0\xa2\x0a\xe3\xee\x97\xbe" + "\x0d\x00\xbe\xff\x03\x04\xd5\xd6\x90\xcc\x0d\xd5\xbc\xb6\xd8\x04" + "\xcf\xd4\x83\xe7\x0a\x85\xa5\xcd\xe8\x06\x00\xbd\xff\x03\x04\x8d" + "\xce\xd4\xac\x04\xab\xf8\x81\xb8\x02\xea\xb6\xa1\x98\x0c\xee\x87" + "\xca\x95\x0e\x00\xbc\xff\x03\x04\xb4\xf1\x80\xb8\x09\xdf\x8c\x9e" + "\xdb\x03\xeb\xa2\x9a\xed\x08\xf5\x8d\x98\xfd\x05\x09\x00\x8a\xa4" + "\x9f\x04\xb0\xe8\x01\x91\x2a\x00\x00\xd1\x06\x00\x00\x40\x00\x00" + "\xb0\xe8\x01\x91\x2a\x00\x00\x00\x0a\x0a\x00\x01\x05\x00\xbf\xff" + "\x03\x00\x05\x80\x80\x06\x00\x02\x00\x00\x09\x03\x8a\xa4\x9f\x04" + "\xb0\xe2\x01\xb1\x31\x00\x00\x00\x00\x00\x40\x00\x00\xb0\xe2\x01" + "\xb1\x31\x00\x00\x00\x00\x00\x00\x01\x00\x00\xbf\xff\x03\x03\x05" + "\x80\x80\x06\x00\x02\x00\x08\x03\x96\x01\xb0\xf5\x01\x90\x34\xbf" + "\xf4\x01\x90\x34\x8a\xa4\x9f\x04\x03\x34\xb0\xea\x01\x90\x2a\xb0" + "\xea\x01\x90\x2a\x8a\xa4\x9f\x04\x03\x33\xb0\xe9\x01\x90\x2a\xb0" + "\xe9\x01\x90\x2a\x8a\xa4\x9f\x04\x03\x22\xb0\xea\x01\x90\x28\xb0" + "\xea\x01\x90\x28\x8a\xa4\x9f\x04\x03\x21\xb0\xe9\x01\x90\x28\xb0" + "\xe9\x01\x90\x28\x8a\xa4\x9f\x04\x03\x39\x90\xe6\x01\xb0\x2c\x90" + "\xe6\x01\xb4\x2b\x88\xa4\x9f\x04\x03\x38\x90\xe6\x01\xb0\x2c\xa7" + "\xe7\x01\x88\x2c\x87\xa4\x9f\x04\x03\x37\x90\xe6\x01\xb0\x2c\x9a" + "\xe5\x01\xbf\x2b\x86\xa4\x9f\x04\x06\x00\x02\x00\x00\x00\x00\x00" + "\x00\x01\xbe\xff\x03\x00\x03\xb2\xb0\x9f\xec\x09\x06\x0d\x07\x00" + "\x00\x00\x1b\x0f\x0a\x01\x00\x01\x00\x00\x00\x0b\x01\xcf\xf8\x98" + "\x91\x03\xff\xfd\xb3\xf0\x01\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7" + "\x0f\xff\xfd\xfb\xe7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f" + "\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01" + "\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01" + "\x32\x32\xbd\xff\x03\x01\x02\x00\x00\x0a\x02\x00\x02\x01\x00\x00" + "\x0b\x02\xd3\xd8\xb8\xc1\x07\xd8\xc4\xb0\xb1\x02\xff\xfd\xfb\x87" + "\x02\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xd7\x09\xff\xfd\xfb\xf7\x0f" + "\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02" + "\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff" + "\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x02\x02\x00\x00\x0a\x03" + "\x00\x03\x00\x00\x00\x0b\x03\xd3\xcc\xb0\xd1\x04\xda\xb4\xd8\x63" + "\xff\xfd\xa3\xc1\x03\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xc7\x09\xff" + "\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde" + "\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd" + "\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x03\x02" + "\x00\x00\x0a\x04\x00\x04\x00\x00\x00\x0b\x04\xd9\xa8\x98\x91\x07" + "\xff\xfd\xb3\x90\x03\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff" + "\xfd\xfb\xb7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda" + "\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd" + "\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32" + "\xbd\xff\x03\x04\x02\x00\x00\x0a\x05\x00\x05\x00\x00\x00\x0b\x05" + "\xe0\xe0\x99\xa3\x06\xff\xc1\xe9\xf2\x05\xff\xfd\xfb\xf7\x0f\xff" + "\xff\xfb\xf7\x0f\xff\xfd\xfb\xa7\x09\xff\xfd\xfb\xf7\x0f\xff\xff" + "\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd" + "\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb" + "\xf7\x0f\x01\x32\x32\xbd\xff\x03\x05\x02\x00\x00\x0a\x06\x00\x06" + "\x00\x3d\x00\x0b\x06\xd6\xb0\x80\xc1\x01\xff\xf9\xa0\xc1\x01\xff" + "\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd" + "\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xa8\x98\xd1\x03\xcb\xac" + "\xb0\xc1\x02\xff\xfd\xfb\x67\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7" + "\x0f\xff\xff\xfb\xf7\x0f\x01\x84\x02\xa4\xfd\xcf\x02\xbd\xff\x03" + "\x06\x02\x00\x00\x0a\x07\x00\x07\x00\x00\x00\x0b\x07\xec\x8c\xf8" + "\x82\x06\xcd\xe8\xf8\xa0\x01\xff\xfd\xfb\xc7\x01\xff\xff\xfb\xf7" + "\x0f\xef\xec\x98\x81\x06\xda\x98\xf0\x09\xa6\x50\x39"
// )
/*void CNetBase::SendControlMsg(NETSOCKET Socket, NETADDR *pAddr, int Ack, int ControlMsg, const void *pExtra, int ExtraSize, SECURITY_TOKEN SecurityToken, bool Sixup)
{
	CNetPacketConstruct Construct;
	Construct.m_Flags = NET_PACKETFLAG_CONTROL;
	Construct.m_Ack = Ack;
	Construct.m_NumChunks = 0;
	Construct.m_DataSize = 1 + ExtraSize;
	Construct.m_aChunkData[0] = ControlMsg;
	if(pExtra)
		mem_copy(&Construct.m_aChunkData[1], pExtra, ExtraSize);

	// send the control message
	CNetBase::SendPacket(Socket, pAddr, &Construct, SecurityToken, Sixup, true);
}
*/
// var packet = Buffer.from("\x00\x01\x03\x41\x03\x01\x01\xf6\x21\xa5\xa1\xf5\x85\x37\x75\x8e\x73\x41\xbe" +
// "\xee\x79\xf2\xb2\x03\x0f\x44\x05\x02\x01\xf9\x11\x7b\x3c\x80\x39" +
// "\x34\x16\x9f\xc0\xae\xf2\xbc\xb7\x5c\x03\x42\x6c\x6d\x61\x70\x43" +
// "\x68\x69\x6c\x6c\x00\x22\x3c\x8d\x1f\x50\x03\x27\x83\x7b\x33\x4f" +
// "\x9f\xc6\x97\x7e\x64\x3b\xfe\xe4\xb3\xdd\xf1\x6a\xd7\x72\x60\x6e" +
// "\xbc\xc0\x84\xa7\x2c\x85\x80\xcb\xfb\x09\xad\xf8\x82\x01\x41\x05" +
// "\x03\x05\x42\x6c\x6d\x61\x70\x43\x68\x69\x6c\x6c\x00\x85\x80\xcb" +
// "\xfb\x09\xad\xf8\x82\x01\x7c\x96\x03\xd7"
// )

var packet = Buffer.from("\x00\x04\x06\x42\x06\x09\x06\x00\x40\x27\x74\x65\x73\x74\x27\x20" + "\x65\x6e\x74\x65\x72\x65\x64\x20\x61\x6e\x64\x20\x6a\x6f\x69\x6e" + "\x65\x64\x20\x74\x68\x65\x20\x67\x61\x6d\x65\x00\x43\x08\x0a\x06" + "\x00\x40\x46\x2d\x44\x44\x72\x61\x63\x65\x20\x4d\x6f\x64\x2e\x20" + "\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x37\x2f\x30\x2e\x36" + "\x2c\x20\x31\x32\x2e\x38\x2e\x31\x2c\x20\x62\x79\x20\x66\x6f\x6b" + "\x6b\x6f\x6e\x61\x75\x74\x00\x48\x0d\x0b\x04\x57\x65\x61\x70\x6f" + "\x6e\x3a\x20\x47\x75\x6e\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" + "\x20\x20\x20\x20\x20\x20\x00\x40\x04\x0c\x06\x00\x40\x00\x49\x0b" + "\x0d\x0c\xa8\x0f\x88\x03\x32\xa8\x14\xb0\x12\xb4\x07\x96\x02\x9f" + "\x01\xb0\xd1\x04\x80\x7d\xac\x04\x9c\x17\x32\x98\xdb\x06\x80\xb5" + "\x18\x8c\x02\x00\xa0\x8b\x11\x88\x03\x00\x90\x8d\x06\x90\x01\x14" + "\xbc\x0a\xa0\x9a\x0c\x88\x03\x80\xe2\x09\x98\xea\x01\xa0\x9a\x0c" + "\x00\x00\xa4\x01\xa4\x01\x80\xf1\x04\xa8\x0f\x98\x09\xa4\x01\xbd" + "\x01\x94\xc3\x01\x94\xc3\x01\x90\x8d\x06\x90\x8d\x06\x80\xe2\x09" + "\x80\xe2\x09\x80\xe2\x09\x94\xc3\x01\x94\xc3\x01\x90\x8d\x06\x90" + "\x8d\x06\x94\xc3\x01\x90\x8d\x06\x90\x9c\x01\xa0\xa9\x07\x00\xb8" + "\x93\x09\xb4\x07\xbd\x01\xb8\xc8\x21\xbd\x01\xa0\xed\x1a\x88\x03" + "\xa0\x84\x3d\x80\xb5\x18\x80\xda\xc4\x09\xac\x04\x39\x06\x0b\xac" + "\xd1\x8b\x05\xad\xd1\x8b\x05\x03\x00\xb9\xae\xb0\xcc\x07\x84\x0e" + "\x00\x96\x01\x00\x00\xbf\xff\x03\x04\x9b\x95\xf2\xec\x0e\xf7\x96" + "\xa6\x61\xf4\xfe\xc0\xa2\x0a\xe3\xee\x97\xbe\x0d\x00\xbe\xff\x03" + "\x04\xd5\xd6\x90\xcc\x0d\xd5\xbc\xb6\xd8\x04\xcf\xd4\x83\xe7\x0a" + "\x85\xa5\xcd\xe8\x06\x00\xbd\xff\x03\x04\x8d\xce\xd4\xac\x04\xab" + "\xf8\x81\xb8\x02\xea\xb6\xa1\x98\x0c\xee\x87\xca\x95\x0e\x00\xbc" + "\xff\x03\x04\xb4\xf1\x80\xb8\x09\xdf\x8c\x9e\xdb\x03\xeb\xa2\x9a" + "\xed\x08\xf5\x8d\x98\xfd\x05\x09\x00\xac\xd1\x8b\x05\xb0\xe8\x01" + "\x98\x27\x00\x80\x0a\xd1\x06\x00\x00\x40\x00\x00\xb0\xe8\x01\x96" + "\x27\x00\x00\x00\x0a\x0a\x00\x01\x05\x00\xbf\xff\x03\x00\x05\x80" + "\x80\x06\x00\x02\x00\x00\x09\x03\xac\xd1\x8b\x05\xae\xe2\x01\xb1" + "\x31\x00\x00\x7f\x00\x00\x40\x00\x00\xae\xe2\x01\xb1\x31\x00\x00" + "\x00\x00\x00\x00\x01\x00\x00\xbf\xff\x03\x03\x05\x80\x80\x06\x00" + "\x02\x00\x08\x03\x34\xb0\xea\x01\x90\x2a\xb0\xea\x01\x90\x2a\xac" + "\xd1\x8b\x05\x03\x33\xb0\xe9\x01\x90\x2a\xb0\xe9\x01\x90\x2a\xac" + "\xd1\x8b\x05\x03\x22\xb0\xea\x01\x90\x28\xb0\xea\x01\x90\x28\xac" + "\xd1\x8b\x05\x03\x21\xb0\xe9\x01\x90\x28\xb0\xe9\x01\x90\x28\xac" + "\xd1\x8b\x05\x03\x39\x90\xe6\x01\xb0\x2c\xae\xe6\x01\xa3\x2d\xaa" + "\xd1\x8b\x05\x03\x38\x90\xe6\x01\xb0\x2c\x90\xe7\x01\xa8\x2b\xa9" + "\xd1\x8b\x05\x03\x37\x90\xe6\x01\xb0\x2c\x88\xe5\x01\xb0\x2c\xa8" + "\xd1\x8b\x05\x06\x00\x02\x00\x00\x00\x00\x00\x00\x01\xbe\xff\x03" + "\x00\x03\xb2\xb0\x9f\xec\x09\x06\x0d\x07\x00\x00\x00\x41\x0e\x0a" + "\x01\x00\x01\x00\x00\x00\x0b\x01\xcf\xf8\x98\x91\x03\xff\xfd\xb3" + "\xf0\x01\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xe7" + "\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80" + "\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f" + "\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03" + "\x01\x02\x00\x00\x0a\x02\x00\x02\x01\x00\x00\x0b\x02\xd3\xd8\xb8" + "\xc1\x07\xd8\xc4\xb0\xb1\x02\xff\xfd\xfb\x87\x02\xff\xff\xfb\xf7" + "\x0f\xff\xfd\xfb\xd7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f" + "\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01" + "\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01" + "\x32\x32\xbd\xff\x03\x02\x02\x00\x00\x0a\x03\x00\x03\x00\x00\x00" + "\x0b\x03\xd3\xcc\xb0\xd1\x04\xda\xb4\xd8\x63\xff\xfd\xa3\xc1\x03" + "\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xc7\x09\xff\xfd\xfb\xf7\x0f\xff" + "\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff" + "\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff" + "\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x03\x02\x00\x00\x0a\x04\x00" + "\x04\x00\x00\x00\x0b\x04\xd9\xa8\x98\x91\x07\xff\xfd\xb3\x90\x03" + "\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff\xfd\xfb\xb7\x09\xff" + "\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda\xe8\xe8\x80\x03\xde" + "\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd\xfb\xf7\x0f\xff\xfd" + "\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32\xbd\xff\x03\x04\x02" + "\x00\x00\x0a\x05\x00\x05\x00\x00\x00\x0b\x05\xe0\xe0\x99\xa3\x06" + "\xff\xc1\xe9\xf2\x05\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xff" + "\xfd\xfb\xa7\x09\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x40\xda" + "\xe8\xe8\x80\x03\xde\xa0\xe0\x90\x02\xff\xfd\xdb\xd1\x01\xff\xfd" + "\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\x01\x32\x32" + "\xbd\xff\x03\x05\x02\x00\x00\x0a\x06\x00\x06\x00\x00\x00\x0b\x06" + "\xcb\xb4\xf0\xb1\x03\xff\xfd\xd3\xa1\x03\xff\xfd\xfb\xf7\x0f\xff" + "\xff\xfb\xf7\x0f\xff\xf9\xe1\xc2\x06\xff\xfd\xfb\xf7\x0f\xff\xff" + "\xfb\xf7\x0f\xaa\x0a\xdb\xec\xf0\xc1\x01\xff\xfd\xfb\x87\x02\xff" + "\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xfd\xfb\xf7\x0f\xff\xff" + "\xfb\xf7\x0f\x01\xbf\x83\x80\x0d\x80\xfe\x07\xbd\xff\x03\x06\x02" + "\x01\x00\x0a\x07\x00\x07\x00\x00\x00\x0b\x07\xdb\xd8\xf2\xf4\x0a" + "\xda\xac\xe8\xe0\x03\xff\xfd\xfb\xa7\x03\xff\xff\xfb\xf7\x0f\xff" + "\xf9\xe1\xc2\x06\xff\xfd\xfb\xf7\x0f\xff\xff\xfb\xf7\x0f\xaa\x0a" + "\xdb\xec\xf0\xc1\x7c\x96\x03\xd7"

)
// SV_MY_OWN_MESSAGE: Uuid = Uuid::from
process.stdin.on("data", (data) => {
	data = data.slice(0, -2)
	console.log(data)
	console.log(Buffer.from("chat test blabla"))
})
var messageTypes = ["SV_MOTD", "SV_BROADCAST", "SV_CHAT", "SV_KILL_MSG", "SV_SOUND_GLOBAL", "SV_TUNE_PARAMS", "SV_EXTRA_PROJECTILE", "SV_READY_TO_ENTER", "SV_WEAPON_PICKUP", "SV_EMOTICON", "SV_VOTE_CLEAR_OPTIONS", "SV_VOTE_OPTION_LIST_ADD", "SV_VOTE_OPTION_ADD", "SV_VOTE_OPTION_REMOVE", "SV_VOTE_SET", "SV_VOTE_STATUS", "CL_SAY", "CL_SET_TEAM", "CL_SET_SPECTATOR_MODE", "CL_START_INFO", "CL_CHANGE_INFO", "CL_KILL", "CL_EMOTICON", "CL_VOTE", "CL_CALL_VOTE", "CL_IS_DDNET", "SV_DDRACE_TIME", "SV_RECORD", "UNUSED", "SV_TEAMS_STATE", "CL_SHOW_OTHERS_LEGACY"]
var messageTypes = [["none, starts at 1", "SV_MOTD", "SV_BROADCAST", "SV_CHAT", "SV_KILL_MSG", "SV_SOUND_GLOBAL", "SV_TUNE_PARAMS", "SV_EXTRA_PROJECTILE", "SV_READY_TO_ENTER", "SV_WEAPON_PICKUP", "SV_EMOTICON", "SV_VOTE_CLEAR_OPTIONS", "SV_VOTE_OPTION_LIST_ADD", "SV_VOTE_OPTION_ADD", "SV_VOTE_OPTION_REMOVE", "SV_VOTE_SET", "SV_VOTE_STATUS", "CL_SAY", "CL_SET_TEAM", "CL_SET_SPECTATOR_MODE", "CL_START_INFO", "CL_CHANGE_INFO", "CL_KILL", "CL_EMOTICON", "CL_VOTE", "CL_CALL_VOTE", "CL_IS_DDNET", "SV_DDRACE_TIME", "SV_RECORD", "UNUSED", "SV_TEAMS_STATE", "CL_SHOW_OTHERS_LEGACY"], ["none, starts at 1", "INFO", "MAP_CHANGE", "MAP_DATA", "CON_READY", "SNAP", "SNAP_EMPTY", "SNAP_SINGLE", "INPUT_TIMING", "RCON_AUTH_STATUS", "RCON_LINE", "READY", "ENTER_GAME", "INPUT", "RCON_CMD", "RCON_AUTH", "REQUEST_MAP_DATA", "PING", "PING_REPLY", "RCON_CMD_ADD", "RCON_CMD_REMOVE"]]
function Unpack(packet) {
	var sys = (i) => { return {"type": i&1 ? "sys" : "game", "msgid": (i-(i&1))/2, "msg": messageTypes[i&1][(i-(i&1))/2], "ye": i.toString(16)}}
	var unpacked = {twprotocol: {flags: packet[0], ack: packet[1], chunkAmount: packet[2], size: packet.byteLength-3}, chunks: []}
	// console.log(unpacked)
	if (unpacked.twprotocol.flags == 0x10)
		return unpacked;
	packet = packet.slice(3)
	for (let i = 0; i < unpacked.twprotocol.chunkAmount; i++) {
		chunk = {}
		chunk.bytes = ((packet[0] & 0x3f) << 4) | (packet[1] & ((1 << 4) - 1)); // idk what this shit is but it works
		if (i == unpacked.twprotocol.chunkAmount-1) 
			console.log("last", packet.slice(0, chunk.bytes))
		chunk.flags = (packet[0] >> 6) & 3;
		chunk.sequence = -1;
		if (chunk.flags & 1) {
			chunk.sequence = ((packet[1] & (~((1 << 4) - 1))) << 2) | packet[2];
		}
		packet = packet.slice(2) // remove flags & size
		console.log(packet[0].toString(16), packet[1].toString(16))
		chunk.type = i&1 ? "sys" : "game";
		chunk.msgid = (i-(i&1))/2;
		chunk.msg = messageTypes[i&1][(i-(i&1))/2];
		chunk.ye = i.toString(16)
		// console.log(sys(packet[1]))
		chunk.raw = packet.slice(0, chunk.bytes)
		// chunk.raw = chunk.raw.toJSON().data.map(a => a.toString(16))
		// chunk.len = chunk.raw.length
		
		// chunk.raw = chunk.raw.map(a => parseInt(a, 16))
		// chunk.raw = Buffer.from(chunk.raw)
		packet = packet.slice(chunk.bytes+1) // +1 cuz it adds an extra \x00 for easier parsing i guess
		unpacked.chunks.push(chunk)
	}
	return unpacked
}
var unpacked = Unpack(packet)
flagged = unpacked.chunks.filter(a => a.flags == 1 && a.sequence != -1);
console.log(unpacked.chunks[unpacked.chunks.length-2])
console.log(unpacked.chunks[unpacked.chunks.length-1])
console.log(unpacked)
// console.log(unpacked.twprotocol, unpacked.chunks, packet)
// console.log(Buffer.from(a).)
// console.log(Unpack(a))
// console.log(Unpack(a))

// var fs = require('fs')
// var proxies = fs.readFileSync(__dirname + "\\proxies.txt")
// 			.toString()
// 			.replace(/\r/g, "")
// 			.split("\n")
// 			.filter(a => a) // filter empty out
// console.log(proxies)